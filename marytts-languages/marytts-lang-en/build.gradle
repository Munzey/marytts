plugins {
    id 'groovy'
}

version '5.2-SNAPSHOT'

sourceSets {
    lexicon
    lexiconTest
}

configurations {
    lexicon
}

repositories {
    mavenLocal()
    jcenter()
    ivy {
        url 'http://svn.code.sf.net/p/cmusphinx/code/trunk/'
        layout 'pattern', {
            artifact '[module]/[artifact]-[revision]'
        }
    }
}

dependencies {
    lexicon name: 'cmudict', version: '0.7b'
    lexiconCompile localGroovy()
    lexiconCompile group: 'de.dfki.mary', name: 'marytts-common', version: version
    lexiconCompile group: 'de.dfki.mary', name: 'marytts-transcription', version: version
    lexiconTestCompile localGroovy()
    lexiconTestCompile 'org.testng:testng:6.8.13'
    lexiconTestCompile(group: 'de.dfki.mary', name: 'marytts-lang-en', version: '5.1.1') {
        exclude module: 'freetts'
        exclude module: 'freetts-de'
        exclude module: 'freetts-en_us'
    }
}

processLexiconResources {
    from 'lib/modules/en/synthesis', {
        include 'sampa2mrpa_en.map'
    }
    from 'lib/modules/en/us/lexicon', {
        include 'allophones.en_US.xml'
    }
    from configurations.lexicon
}

task convertLexicon {
    description 'Converts lexicon file to plain text, with a SAMPA phoneset instead of ARPAbet'
    dependsOn lexiconClasses
    def destFile = file("$sourceSets.lexicon.output.resourcesDir/en.txt")
    inputs.files processLexiconResources
    outputs.files destFile
    doLast {
        javaexec {
            classpath sourceSets.lexicon.runtimeClasspath
            main 'CmuDictConverter'
            def allophoneSetFile = file("$sourceSets.lexicon.output.resourcesDir/allophones.en_US.xml")
            def mappingFile = file("$sourceSets.lexicon.output.resourcesDir/sampa2mrpa_en.map")
            def lexiconFile = configurations.lexicon.singleFile
            args = [allophoneSetFile, mappingFile, destFile, lexiconFile].flatten()
        }
    }
}

task trainLTS(type: JavaExec) {
    description 'Trains LTS rules from converted CMUdict'
    inputs.files file("$sourceSets.lexicon.output.resourcesDir/allophones.en_US.xml"), convertLexicon
    args inputs.files
    classpath sourceSets.lexicon.runtimeClasspath
    main 'marytts.tools.transcription.LTSLexiconPOSBuilder'
    doLast {
        copy {
            from sourceSets.lexicon.output.resourcesDir
            include 'en.lextxt',
                    'en.lts',
                    'en_lexicon.dict',
                    'en_lexicon.fst'
            into "$sourceSets.main.output.resourcesDir/marytts/language/en_US/lexicon"
        }
    }
}

processResources.dependsOn trainLTS

trainLTS.dependsOn convertLexicon

task lexiconTest(type: Test) {
    useTestNG()
    testClassesDir = sourceSets.lexiconTest.output.classesDir
    classpath = sourceSets.lexiconTest.runtimeClasspath + sourceSets.lexicon.runtimeClasspath
}

lexiconTest.dependsOn convertLexicon